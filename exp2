import requests

video_id = "l-nMKJ5J3Uc"

api_key =  "AIzaSyCJF6Ljcay6oDQ1Bv-oO9ewD55Vktn_FEQ"

video_info_url = f"https://www.googleapis.com/youtube/v3/videos?part=snippet&id={video_id}&key={api_key}"
video_info_response = requests.get(video_info_url)
video_info_data = video_info_response.json()

print(video_info_data)

comments_url = f"https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId={video_id}&key={api_key}"
comments_response = requests.get(comments_url)
comments_data = comments_response.json()

comments_data
#extract the comment

comments = [item["snippet"]["topLevelComment"]["snippet"]["textOriginal"] for item in comments_data["items"]]

print(comments)

from textblob import TextBlob
def get_comment_sentiment(comment):
    analysis = TextBlob(comment)

    if analysis.sentiment.polarity > 0:
        return 'positive'
    elif analysis.sentiment.polarity == 0:
        return 'neutral'
    else:
        return 'nagative'

for comment in comments:
    print(f"{comment}: {get_comment_sentiment(comment)}")

comment_list = []

sentiment_list =[]

for comment in comments:
    sentiment = get_comment_sentiment(comment)
    comment_list.append(comment)
    sentiment_list.append(sentiment)
    print(f"{comment} : {sentiment}")

import pandas as pd

comment_list

sentiment_list

sentiment_df = pd.DataFrame({"Comments": comment_list,"Sentiment": sentiment_list})

sentiment_df

sentiment_df.to_csv("YouTube_Comments_Sentiment.csv")  #gets saved to current folder

sentiment_df

